services:
  ui:
    container_name: "ui"
    tty: true
    command: sh -c "cd /app/ && yarn dev"
    env_file:
      - .env
    image: node:20-alpine3.18
    volumes:
      - ./frontend/:/app/
    ports:
      - "${FRONTEND_PORT-55173}:55173"

  queue:
    container_name: "queue"
    image: "rabbitmq:3.13-management-alpine"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD-guest}
    command: ["/bin/bash", "/init/rabbitmq-init.sh"]
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ob-queue-data:/var/lib/rabbitmq
      - ./rabbitmq.sh:/init/rabbitmq-init.sh:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s


  worker:
    container_name: "worker"
    build:
      context: .
      dockerfile: services/worker/Dockerfile
    env_file:
      - .env
    environment:
      - RUST_LOG=${RUST_LOG-debug}
      - AMQP_URL=${AMQP_URL-amqp://${RABBITMQ_USER-guest}:${RABBITMQ_PASSWORD-guest}@queue:5672//}
      - FIRECRACKER_BIN=${FIRECRACKER_BIN-/usr/bin/firecracker}
      - KERNEL_IMAGE=${KERNEL_IMAGE-/artifacts/vmlinux.bin}
      - ROOTFS_IMAGE=${ROOTFS_IMAGE-/artifacts/rootfs.ext4}
      - BOOT_ARGS=${BOOT_ARGS-console=ttyS0 reboot=k panic=1 pci=off}
      - TAP_NAME=${TAP_NAME-}
      - GUEST_MAC=${GUEST_MAC-}
      - ENABLE_VSOCK=${ENABLE_VSOCK-false}
      - VSOCK_DIR=${VSOCK_DIR-/sockets}
      - VSOCK_GUEST_CID=${VSOCK_GUEST_CID-3}
    volumes:
      - /dev/kvm:/dev/kvm
      - /dev/net/tun:/dev/net/tun
      - ./vmlinux.bin:/artifacts/vmlinux.bin:ro
      - ./rootfs.ext4:/artifacts/rootfs.ext4:ro
      - ./vm_config.json:/artifacts/vm_config.json:ro
      - ./sockets:${VSOCK_DIR-/sockets}
    depends_on:
      queue:
        condition: service_healthy
      db:
        condition: service_started
    cap_add:
      - NET_ADMIN

  db:
    container_name: "db"
    image: apache/age
    volumes:
      - "ob-db-data:${PGDATA-/var/lib/postgresql/data/pgdata}"
    env_file:
      - .env
    ports:
      - "55432:5432"

  # db:
  #   container_name: "db"
  #   image: "postgres:17.6-alpine3.22"
  #   volumes:
  #     - "ob-db-data:${PGDATA-/var/lib/postgresql/data/pgdata}"
  #   env_file:
  #     - .env
  #   ports:
  #     - "55432:5432"

  # cache:
  #   container_name: "cache"
  #   image: "redis:8.2.1-alpine"
  #   volumes:
  #     - "ob-cache-data:${REDIS_VOLUME-/data}"
  #   env_file:
  #     - .env
  #   ports:
  #     - "55432:5432"

  # store:
  #   container_name: "store"
  #   image: quay.io/minio/minio
  #   command: "server /data"
  #   environment:
  #     MINIO_ROOT_USER: minio
  #     MINIO_ROOT_PASSWORD: password
  #   ports:
  #     - 9000:9000
  #     - 9001:9001
  #   volumes:
  #     - ob-store-data:/data

volumes:
  ob-db-data:
  # ob-cache-data:
  ob-queue-data:
  # ob-store-data:
